[tox]
isolated_build = true
# Environments here are run in the order they appear.
# They can be individually run using "tox -e <env[,...]>".
envlist =
    black
    isort
    mypy
    coverage_erase
    py{37, 38, 39, 310, 311}
    py{37, 311}-minimum_flask
    coverage_report


[testenv:coverage_erase]
skip_install = true
deps = coverage[toml]
commands = coverage erase


[testenv]
package = wheel
wheel_build_env = build_wheel
depends =
    py{311, 310, 39, 38, 37}: coverage_erase
extras =
    testing
    !minimum_flask: flask
deps =
    minimum_flask: flask==2.1.0
commands = coverage run -m pytest


[testenv:coverage_report]
depends =
    py{311, 310, 39, 38, 37}
skip_install = true
deps = coverage[toml]
commands_pre =
    coverage combine
    coverage html --fail-under=0
commands = coverage report


[testenv:black]
skip_install = true
deps = pre-commit
commands = pre-commit run --hook-stage manual --all black-check


[testenv:isort]
skip_install = true
deps = pre-commit
commands = pre-commit run --hook-stage manual --all isort-check


[testenv:mypy]
skip_install = true
deps =
    mypy==0.982
    types-cachetools
    types-requests
    types-pyyaml

commands =
    mypy --ignore-missing-imports globus_action_provider_tools/ tests/
    mypy --ignore-missing-imports examples/apt_blueprint
    mypy --ignore-missing-imports examples/watchasay
    mypy --ignore-missing-imports examples/whattimeisitrightnow
